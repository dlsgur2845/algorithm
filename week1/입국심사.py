"""
유형 : 이진 탐색

1. 탐색해야할 값은 n명을 심사하는 최소시간(1) 부터 최대시간(n * 가장 느린 심사대)이다.
  - 최악의 경우 탐색 횟수는 log2(10억x10억) = 59.79 (약 60번)
  - 탐색 범위를 더 줄일 수 있을지는 더 생각해 봐야할 것 같지만 이진 탐색을 했을 때 크게 차이 나지 않을 것 같음.
2. 탐색 범위를 정했다면 m 시간에 심사대를 몇명이 통과할 수 있는지를 계산하여 pp에 저장
  - 이 때 필요한 최악의 탐색 횟수는 10만 번.
3. pp와 n을 비교해 pp가 크다면 총 심사 시간을 줄이고 적다면 늘린다. 만약 같다면 최소 시간을 구해야 하기 때문에 총 심사 시간을 줄인다.
  - 따라서 알고리즘의 탐색 횟수는 대략 6백만이다.
"""

def solution(n, times):
    l=1
    r=max(times)*n
    while l <= r:
        m = (l+r)//2
        pp=0
        for t in times:
            pp += m//t
        if pp >= n:
            r=m-1
        else:
            l=m+1
    return l
